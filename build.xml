<!--
	Mool Compiler, is a toy compiler written in Scala, which compiles programs
	written in Mool to Java bytecode
	Copyright (C) <2012-2013>  Amanj Sherwany <http://wwww.amanj.me>
  
 
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public License
  along with Loci.  If not, see <http://www.gnu.org/licenses/>.
 -->

<project name="Mool Compiler" default="build" basedir=".">
	
	<!-- Tests weather you have the required Ant version or not -->
	<fail message="Please build using Ant 1.8.0 or higher.">
  	<condition>
    	<not>
      	<antversion atleast="1.8.0"/>
      </not>
  	</condition>
  </fail>
    
	<!-- A short description about Mool Compiler -->
	<description>
		Mool Compiler, is a toy compiler written in Scala, which compiles programs
		written to JVM bytecode
	</description>
	
	<!-- set global properties for the build -->
	<property environment="env"/>
	<property name="scala.home" value="${env.SCALA_HOME}"/>
	<property name="project" value="moolc"/>
	<property name="version" value="1.0"/>
	<property name="year" value="2012"/>
	<property name="vendor" value="University of Lugano"/>
	<property name="moolWebpage" value="http://www.it.uu.se/research/upmarc/loci"/>

	<property name="base" value="."/>
	<property name="src" value="${base}/src"/>
	<property name="build" value="${base}/build"/>
	<property name="dist" value="${base}/dist"/>
	<property name="main.class" value="ch.usi.inf.l3.moolc.Compile"/>
	<property name="lib" value="${base}/lib"/>
	
	<target name="init">

		<property name="scala-library.jar" value="${scala.home}/lib/scala-library.jar"/>
		<path id="build.classpath">
			<pathelement location="${scala-library.jar}" />
			<pathelement location="${src}"/>
			<pathelement location="${lib}/asm-all-4.1.jar"/>
		</path>
		
		<taskdef resource="scala/tools/ant/antlib.xml">
			<classpath>
				<pathelement location="${scala.home}/lib/scala-reflect.jar" />
				<pathelement location="${scala.home}/lib/scala-compiler.jar" />
				<pathelement location="${scala-library.jar}"/>
			</classpath>
		</taskdef>
	</target>
	
	<target name="build" depends="clean, init">
		<mkdir dir="${build}"/>
		<scalac srcdir="${src}" unchecked="yes"  deprecation="yes"
						destdir="${build}" classpathref="build.classpath"
						addparams="-Dscalac.patmat.analysisBudget=off">
			<include name="**/*.scala" />
			<exclude name="forget/**/*.scala" />
		</scalac>
	</target>
	
	<!-- Creating the JAR file -->
	<target name="jar" depends="build" description="generate the jar file" >
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}"/>
		
		<copy todir="${dist}/lib">
		  <fileset dir="${lib}">
		    <include name="*.jar" />
		  </fileset>
		</copy>
	
		<!-- Put everything in ${build} into the 
		                    ${project}.jar file -->
		<jar jarfile="${dist}/${project}.jar" basedir="${build}">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${main.class}"/>
				<attribute name="Class-Path" 
										value="${lib}/asm-all-4.1.jar ${project}.jar" />
				<section name="common">
					<attribute name="Specification-Title" value="${project}" />
					<attribute name="Specification-Version" value="${version}"/>
					<attribute name="Specification-Vendor" value="${vendor}" />
					<attribute name="Implementation-Title" value="${project}" />
					<attribute name="Implementation-Version" 
					                        value="${version}" />
					<attribute name="Implementation-Vendor" value="${vendor}" />
				</section>
			</manifest>
		</jar>
	</target>
		
	<target name="clean">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>	
</project>